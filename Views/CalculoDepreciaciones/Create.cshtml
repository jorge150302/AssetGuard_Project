@model AssetGuard_Project.Models.CalculoDepreciacion

@{
    ViewData["Title"] = "Crear";
}

<h1>Crear</h1>

<h4>Cálculo Depreciación</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="MesProcesoCd" class="control-label"></label>
                <input asp-for="MesProcesoCd" class="form-control" />
                <span asp-validation-for="MesProcesoCd" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ActivoFijoCd" class="control-label"></label>
                <select asp-for="ActivoFijoCd" class ="form-control" asp-items="ViewBag.ActivoFijoCd"></select>
            </div>
            <div class="form-group">
                <label asp-for="FechaProcesoCd" class="control-label"></label>
                <input asp-for="FechaProcesoCd" class="form-control" />
                <span asp-validation-for="FechaProcesoCd" class="text-danger"></span>
            </div>
     
            
            <div class="form-group">
                <label asp-for="AnoProcesoCd" class="control-label"></label>
                <input asp-for="AnoProcesoCd" class="form-control" id="anoInput" />
                <span asp-validation-for="AnoProcesoCd" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="MontoDepreciadoCd" class="control-label"></label>
                <input asp-for="MontoDepreciadoCd" class="form-control" id="montoInput" />
                <span asp-validation-for="MontoDepreciadoCd" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DepreciacionAcumuladaCd" class="control-label"></label>
                <input asp-for="DepreciacionAcumuladaCd" class="form-control" id="depreciacionAcumuladaInput" readonly />
                <span asp-validation-for="DepreciacionAcumuladaCd" class="text-danger"></span>
            </div>  
           


            <div class="form-group">
                <label asp-for="CuentaCompra" class="control-label"></label>
                @Html.DropDownListFor(model => model.CuentaCompra, new List<SelectListItem>
                {
                new SelectListItem { Text = "Gasto depreciación Activos Fijos", Value = "65", Selected = true},
                new SelectListItem { Text = "Depreciación Acumulada Activos Fijos", Value = "66"}
                }, new { @class = "form-control" })

                <span asp-validation-for="CuentaCompra" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CuentaDepreciacion" class="control-label"></label>
                @Html.DropDownListFor(model => model.CuentaDepreciacion, new List<SelectListItem>
                {
                new SelectListItem { Text = "Gasto depreciación Activos Fijos", Value = "65"},
                new SelectListItem { Text = "Depreciación Acumulada Activos Fijos", Value = "66"}
               }, new { @class = "form-control" })

                <span asp-validation-for="CuentaDepreciacion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Crear" class="btn btn-primary" /> |
                <a asp-action="Index" class="btn btn-info">Regresar</a> |

            </div>
        </form>
    </div>
</div>

<div>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        
        const montoInput = document.getElementById('montoInput');
        const anoInput = document.getElementById('anoInput');
        const depreciacionAcumuladaInput = document.getElementById('depreciacionAcumuladaInput');

       
        function calcularDepreciacionAcumulada() {
            const monto = parseFloat(montoInput.value);
            const cantidadAnos = parseInt(anoInput.value);

            if (isNaN(monto) || isNaN(cantidadAnos) || cantidadAnos === 0) {
                depreciacionAcumuladaInput.value = '';
                return;
            }

            const depreciacionAcumulada = monto / cantidadAnos;
            depreciacionAcumuladaInput.value = depreciacionAcumulada.toFixed(2);
        }

       
        montoInput.addEventListener('input', calcularDepreciacionAcumulada);
        anoInput.addEventListener('input', calcularDepreciacionAcumulada);
    });
</script>